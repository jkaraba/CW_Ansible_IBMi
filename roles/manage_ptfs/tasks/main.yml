---

- name: Check system for PTFs  
  include_tasks: query_system_for_ptfs.yml

- name: Match requested PTFs against PTF list
  set_fact:
    matching_ptfs: "{{ matching_ptfs | combine({item: loaded_ptfs[idx |int] }, recursive = true) }}"
  vars:
     idx: "{{ lookup('ansible.utils.index_of', loaded_ptfs, 'eq', item, 'PTF_IDENTIFIER') }}"
  loop: "{{ ptfs_list }}"
  when: idx != []

- name: "Found {{ matching_ptfs |length }} matching PTF(s)"  
  include_tasks: show_ptf_details.yml
  vars:
    product: "{{ item.value.PTF_PRODUCT_ID }}"
    ptf: "{{ item.value.PTF_IDENTIFIER }}"
    release: "*ALL"
  loop: "{{ matching_ptfs |dict2items }}"
  loop_control:
     label: "{{ item.value.PTF_IDENTIFIER }}"

################################################
- name: Check if individual PTFs are already in catalog
  ibm.power_ibmi.ibmi_fix_repo:
    type: "single_ptf"
    action: "find"
    parameters: "{{ ptfs_list |string }}"
    checksum: true
  register: fix_repo_find_result
  delegate_to: "{{ repo_server }}"



#- name: Download missing PTFs
#  include_role: 
#    name: fix_repo_download_apply_individual_ptfs
#  ignore_errors: True
#  loop: "{{ query('sequence', 'start=1 end=5') }}"
#  loop_control:
#    loop_var: sequence_var


